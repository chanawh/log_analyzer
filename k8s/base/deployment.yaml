apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-analyzer
  namespace: log-analyzer
  labels:
    app.kubernetes.io/name: log-analyzer
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: log-analyzer
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: log-analyzer
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: log-analyzer
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: log-analyzer
        image: log-analyzer:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: FLASK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: log-analyzer-secret
              key: flask-secret-key
        envFrom:
        - configMapRef:
            name: log-analyzer-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: upload-storage
          mountPath: /app/uploads
        - name: log-storage
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: upload-storage
        persistentVolumeClaim:
          claimName: log-analyzer-upload-pvc
      - name: log-storage
        persistentVolumeClaim:
          claimName: log-analyzer-logs-pvc
      restartPolicy: Always